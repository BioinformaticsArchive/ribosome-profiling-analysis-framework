sudo apt-get install python-pip
sudo pip install wiggelen

# For Windows users:
# 1- Install python (http://python.org/download/)
# 2- Install pip-Win (https://sites.google.com/site/pydatalog/python/pip-for-windows) and start pip-Win.
# 3- Run command 'pip install wiggelen' in the pip-Win screen.

# The below script merges any wiggle files starting with the same part before
# the first dot (.) in the file name together, and creates a merged wiggle file.
# It does so per strand (F and R), and separately for filtered and unfiltered
# data. This information is taken from the file name.
# NOTE: File names must end in ".packed.F.wig5" and ".packed.R.wig5" for the
# transcriptome alignments, and in "genome.F.wig5" and "genome.R.wig5" for the
# genomic alignments. The filtered transcriptome alignment files should end
# in ".packed.F.filtered.wig5" and ".packed.R.filtered.wig5".
# NOTE: The resulting Wiggle file, created by Wiggelen, uses spaces instead of
# tabs as separator, regardless of what the original files are using. It is not
# clear whether or not space or tab *should* be used; it seems that all services
# accept both. No official standard seems to exist. Since we are using tabs
# everywhere, because SAM tools are using them, we're replacing the spaces with
# tabs.

for sample in `ls *.wig5 | cut -d . -f 1 | sort | uniq`;
do
  for strand in F R;
  do
    rm -f "${sample}.merged_wiggle.${strand}.wig5";
    rm -f "${sample}.merged_wiggle.${strand}.filtered.wig5";
    wiggelen merge ${sample}*genome.${strand}.wig5 ${sample}*.packed.${strand}.wig5 | sed 's/^\([0-9]\+\) \([0-9]\+\)/\1\t\2/' > "${sample}.merged_wiggle.${strand}.wig5";
    echo -n ".";
    wiggelen merge ${sample}*genome.${strand}.wig5 ${sample}*.packed.${strand}.filtered.wig5 | sed 's/^\([0-9]\+\) \([0-9]\+\)/\1\t\2/' > "${sample}.merged_wiggle.${strand}.filtered.wig5";
    echo -n ".";
  done;
  # This process leaves .idx files laying around. Remove them by:
  rm ${sample}*.idx;
  echo -n " ";
done;
echo "";

# (on one line)

for sample in `ls *.wig5 | cut -d . -f 1 | sort | uniq`; do for strand in F R; do rm -f "${sample}.merged_wiggle.${strand}.wig5"; rm -f "${sample}.merged_wiggle.${strand}.filtered.wig5"; wiggelen merge ${sample}*genome.${strand}.wig5 ${sample}*.packed.${strand}.wig5 | sed 's/^\([0-9]\+\) \([0-9]\+\)/\1\t\2/' > "${sample}.merged_wiggle.${strand}.wig5"; echo -n "."; wiggelen merge ${sample}*genome.${strand}.wig5 ${sample}*.packed.${strand}.filtered.wig5 | sed 's/^\([0-9]\+\) \([0-9]\+\)/\1\t\2/' > "${sample}.merged_wiggle.${strand}.filtered.wig5"; echo -n "."; done; rm ${sample}*.idx; echo -n " "; done; echo "";

# After the merging, I noticed that some positions were in both Wiggle files,
# which would mean that although some reads could not align to the
# transcriptome, they aligned just fine on the genome on the same position.
# Per chromosome, you can create a list like:

for pos in `diff -U 1 merged_A1.fastq.trunc.transcriptome.mappedforward_M25_3col.sam.packed.F.wig5_chr1 merged_A1.merged_wiggle.F.wig5_chr1 | grep -E "^\-" | grep -v track | cut -d - -f 2 | cut -f 1`;
do
  grep -E "^${pos}\s" merged_A1.fastq.trunc.transcriptome.mappedforward_M25_3col.sam.packed.F.wig5_chr1 merged_A1.merged_wiggle.F.wig5_chr1;
  echo "";
done | cut -d : -f 2 > merged_A1.positions_with_coverage_in_both_wiggles_chr1.txt

# In one line:
for pos in `diff -U 1 merged_A1.fastq.trunc.transcriptome.mappedforward_M25_3col.sam.packed.F.wig5_chr1 merged_A1.merged_wiggle.F.wig5_chr1 | grep -E "^\-" | grep -v track | cut -d - -f 2 | cut -f 1`; do grep -E "^${pos}\s" merged_A1.fastq.trunc.transcriptome.mappedforward_M25_3col.sam.packed.F.wig5_chr1 merged_A1.merged_wiggle.F.wig5_chr1; echo ""; done | cut -d : -f 2 > merged_A1.positions_with_coverage_in_both_wiggles_chr1.txt

