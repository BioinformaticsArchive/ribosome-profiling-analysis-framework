RIBOSOME PROFILING PROJECT, DISCOVERING TRIPLET PERIODICITY AND ALTERNATIVE ORFs
================================================================================

WORKFLOW
--------------------------------------------------------------------------------
If you're doing alignment on the genome only, skip to 7).

1) If you're doing alignment on the transcriptome, you'll get positions based on
the start of the transcript, instead of the start of the open reading frame.
The method used here to do this mapping, is Mutalyzer. For this, we first need
to get from transcriptome positions, to genomic positions. Since the transcrip-
tome sequences do not always align well to the genome, first the transcriptome
reference sequence needs to be filtered for transcripts that do not support this
alignment. For all the other transcripts, you need a file that indicates the
location of the exons of the transcripts on the genome. The NCBI file is not
usable, and Mutalyzer can not do this step either. See the help file
help/mm10_transcript_positions_create.txt for more information.

Usage: ./mm10_transcript_positions_create.php TRANSCRIPTOME_ALIGNMENT_SAM_FILE

Produces:
- mm10_transcript_positions.txt
  Contains the genomic locations of all exons of each useful transcript.
- transcriptome_alignment_unsupported_transcripts.txt
  Contains all unsupported transcripts and the reasons for rejection.



2) Also interesting to know is which transcripts might pose problems when
aligning to the genome. These are the transcripts where close to the translation
start site an intron is located. This information can not be deduced from the
transcript-to-genome alignment SAM file from step 1, since that does not
indicate where the translation start site is located. For this, we download a
file from the NCBI that has the annotation of exons and the translated region
for each transcript:
ftp://ftp.ncbi.nih.gov/genomes/M_musculus/mapview/seq_gene.md.gz
The find_distance_to_ATG.php script extracts this information and creates two
files; one with problematic transcripts, sorted on the distance to the closest
intron, and one file with transcripts where no UTR is annotated so where the
distance to the 5' intron is unknown.
A distance of 15 bases to the ATG is currently the default threshold.

Usage: ./find_intron_distance_to_ATG.php path_to_seq_gene.md
Produces:
- seq_gene.md.distance_intron_to_ATG.txt
  Lists all transcripts where the distance of the intron to the ATG is 15 or
  less (distance is configurable by editing the file).
- seq_gene.md.distance_intron_to_ATG_errors.txt
  Lists all transcripts that have no UTR annotated, thus the 5' distance to an
  intron is unknown. For all these transcripts, the 3' distance is safe (> 15).



3) After doing the alignment of the ribosome profiling reads on the transcrip-
tome, you end up with SAM files.
The SAM files are first packed, reducing them in size and grouping the reads
together to generate a file that sums the coverage per transcript per position.
For this, use the pack_sam_files.php file.
Usage: ./pack_sam_files.php SAM_FILE1 [SAM_FILE2 [SAM_FILE3 [...]]]

Produces:
- For each given SAM file, a SAM.packed file.
  Contains the transcript ID, the position relative to the start of the tran-
  script, and the total coverage for that position, i.e. the number of reads
  aligned starting at this position.



4) The packed SAM files can be used to run some statistics. Currently available
is packed_sam2coverage_per_gene.php.
Usage: ./packed_sam2coverage_per_gene.php path_to_mm10_gene_list.txt \
           PACKED_SAM_FILE1 [ PACKED_SAM_FILE2 [ ... ]]

Produces:
- One file which name depends on the given SAM files, ending in the suffix
  .coverage_per_gene.txt, per SAM file, mentioned which transcripts can not be
  matched to a gene, listing the top 5 unknown transcripts based on their cove-
  rage and finally, a large table where the samples are presented as columns,
  and on each line the genes are given with the coverage in each sample. The
  genes are sorted on total coverage in all samples together.

Other statistics can be run directly on the packed SAM files, for instance how
many reads are mapped to non-coding reads.



5) The packed SAM files are used to generate Wiggle files. For this, use the
packed_sam2wiggle.php script, which needs the transcript positions file descri-
bed in 1).
Usage: ./packed_sam2wiggle.php TRANSCRIPT_POSITIONS_FILE \
           PACKED_SAM_FILE1 [PACKED_SAM_FILE2 [PACKED_SAM_FILE3 [...]]

This script creates 4 Wiggle files per SAM file; F unfiltered, F filtered (NR
and XR removed), R unfiltered, and R filtered.



6) Optionally, if genome alignment has been done as well as transcriptome align-
ment, the Wiggle files from both alignments can be merged together. This is done
using the "wiggelen" package written by Martijn Vermaat and Jeroen Laros.
For detailed information, see the help file help/merge_wigglefiles.txt.



7) Wiggle files are converted to Mutalyzer position converter batch files using
the wig2batchfile.php script.
Usage: ./wig2batchfile.php WIG_FILE
It can create one mutalyzer file for multiple Wiggle files, but the analysis
script does not support that, so then they would need to be split afterwards.



8) The position converter batch files are manually loaded into Mutalyzer:
https://test.mutalyzer.nl/batchPositionConverter



9) When done, the results are downloaded from Mutalyzer. If you're not sure
anymore which results file belongs to which batchfile, you can match these files
by using the match_mutalyzer_output_to_batchfile.sh script.
Usage:
./match_mutalyzer_output_to_batchfile.sh <MUTALYZER_OUTPUT_FILES> <BATCH_FILES>

The results files can be analyzed using the analyze_codon_positions.php script,
that checks if the ribosomes have indeed been stopped at the start sites.
Usage:
./analyze_codon_positions.php MUTALYZER_FILE WIGGLE_FILE GENE_LIST_FILE STRAND

Example:
./analyze_codon_positions.php F.wig5_mutalyzer_batchfile_results.txt F.wig5 \
  mm10_gene_list.txt F
(Valid values for Strand: +, -, F and R)

The script does the following things:
+ Read out the coverage information from the Wiggle file
+ Read the gene list to find out which genes (transcripts, actually) are on
  which strand
+ Read the Mutalyzer result file to see which locations map to which
  transcripts, determining the position within the transcript
  * Filter low coverage positions (< 3)
  * Mappings on non-coding transcripts are ignored
  * Mappings on transcripts on the other strand are ignored
  * Filter positions without transcript mapping
  * Filter positions with only intronic mapping
  * Filter positions too far from transcript start or stop sites
    (> 500bp)
  * The remaining possible mappings are processed.
    - 5' UTR or 3' UTR mappings, while exonic mappings are also
      available, are discarded.
    - If there are 5' UTR and 3' UTR mappings, but none in the exon
      region, we assume an intergenic situation and if one of the two
      positions is clearly closer to the translated region than the
      other (> 100bp), then the closest position is picked.
      If not, the position is reported.
    - After this, all mappings are counted by their coverage and
      reported.

Possible to do:
- Multiple 5' UTR *or* multiple 3' UTR mappings are all counted if these
are the only mappings. Perhaps we should pick the closest, like as if
both UTR mappings were present.




